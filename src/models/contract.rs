/* 
 * Aeternity Epoch
 *
 * This is the [Aeternity](https://www.aeternity.com/) Epoch API.
 *
 * OpenAPI spec version: 0.25.0
 * Contact: apiteam@aeternity.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Contract {
  #[serde(rename = "code")]
  code: String,
  #[serde(rename = "options")]
  options: String
}

impl Contract {
  pub fn new(code: String, options: String) -> Contract {
    Contract {
      code: code,
      options: options
    }
  }

  pub fn set_code(&mut self, code: String) {
    self.code = code;
  }

  pub fn with_code(mut self, code: String) -> Contract {
    self.code = code;
    self
  }

  pub fn code(&self) -> &String {
    &self.code
  }


  pub fn set_options(&mut self, options: String) {
    self.options = options;
  }

  pub fn with_options(mut self, options: String) -> Contract {
    self.options = options;
    self
  }

  pub fn options(&self) -> &String {
    &self.options
  }


}



