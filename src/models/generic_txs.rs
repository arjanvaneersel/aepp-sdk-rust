/* 
 * Aeternity Epoch
 *
 * This is the [Aeternity](https://www.aeternity.com/) Epoch API.
 *
 * OpenAPI spec version: 0.25.0
 * Contact: apiteam@aeternity.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GenericTxs {
  #[serde(rename = "transactions")]
  transactions: Vec<::models::GenericSignedTx>
}

impl GenericTxs {
  pub fn new(transactions: Vec<::models::GenericSignedTx>) -> GenericTxs {
    GenericTxs {
      transactions: transactions
    }
  }

  pub fn set_transactions(&mut self, transactions: Vec<::models::GenericSignedTx>) {
    self.transactions = transactions;
  }

  pub fn with_transactions(mut self, transactions: Vec<::models::GenericSignedTx>) -> GenericTxs {
    self.transactions = transactions;
    self
  }

  pub fn transactions(&self) -> &Vec<::models::GenericSignedTx> {
    &self.transactions
  }


}



